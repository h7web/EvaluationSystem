@model StaffEvaluations.Models.IndexViewModel

@{
    ViewBag.Title = "Home Page";
    var unit = "";
}
<div class="divbox">
    <h2>Evaluations from your supervisor</h2>

    <div>
        <Br />@Html.ValidationSummary(false)
    </div>


    @if (Model.MyEvaluations.Count > 0)
    {
        <ul>
            @foreach (StaffEvaluations.Models.StaffPerformanceEvaluation eval in Model.MyEvaluations)
            {
                var mystatus = "";
                var evalname = LibDirectoryIntegration.LibDirectoryFactory.GetPerson(eval.EvaluatorNetid).name;
                <li>
                    @if (@eval.Status != "In-Work" && @eval.Status != "Deferred")
                    {
                        @Html.ActionLink("Go to your evaluation from " + evalname, "EditEval", new { id = eval.EvalId })
                    }
                    else
                    {
                        @:Your evaluation from
                        @evalname.ToString()
                        @: is in progress
}
                    @if (@eval.Status == "Submitted")
                    {
                        mystatus = "Submitted to Employee";
                    }
                    else if (@eval.Status == "Complete")
                    {
                        mystatus = "Submitted to HR";
                    }
                    else
                    {
                        mystatus = eval.Status;
                    }

                    &nbsp;(@mystatus)
                    @if (@eval.Status == "Submitted")
                    {
                        @Html.ActionLink("Return to Supervisor", "ReturnEvaltoSupervisor", new { id = eval.EvalId, button = "Return" })
                        @:|
                        @Html.ActionLink("Accept", "DoubleCheckEval", new { id = eval.EvalId, button = "Accept" })
                        @:|
                        @Html.ActionLink("Contest", "DoubleCheckEval", new { id = eval.EvalId, button = "Contest" })
                        @:|
                }
                    @Html.ActionLink("Pdf", "Print2Pdf", "CreatePDF", new { id = eval.EvalId, e = true }, null)
                </li>
            }
        </ul>
    }
    else
    {
        <ul><li>Not yet available.</li></ul>
    }

</div>
<div class="divbox">


    <h2>Evaluations for your staff</h2>
    @if (Model.Super.direct_reports.Count > 0)
    {
        <table>
            @foreach (LibDirectoryIntegration.DirectReport directReport in Model.Super.direct_reports)
            {
                var lsdate = directReport.LibraryStartDate.AsDateTime().ToString("MM/dd/yyyy");
                if (unit != directReport.unit_name)
                {
                    unit = directReport.unit_name;
                    <tr><td colspan="6"><h3>@unit</h3></td></tr>
                    <tr class="table_header"><td><b>Name</b></td><td colspan="2"><b>E-class</b></td><td><b>Anniversary&nbsp;Date&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td><b>Status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td><b>Actions</b></td></tr>
                }
                <tr id="netid_@directReport.netid" class="@(( (string)ViewData["go"]==directReport.netid)? "highlighted": "not_highlighted")">

                    @if (Model.MyStaffEvaluations.Any(e => e.NetId == directReport.netid))
                    {
                        var eid = Model.MyStaffEvaluations.Where(e => e.NetId == directReport.netid).Single().EvalId;
                        var status = Model.MyStaffEvaluations.Where(e => e.NetId == directReport.netid).Single().Status;
                        var ret = Model.MyStaffEvaluations.Where(e => e.ReturntoSupervisorNetid != null).SingleOrDefault();

                        if (status == "Submitted")
                        {
                            status = "Submitted to Employee";
                        }
                        else if (status == "Complete")
                        {
                            status = "Submitted to HR";
                        }

                        <td><strong>@directReport.name</strong></td>
                        <td></td>
                        <td>@directReport.employee_type_code</td>
                        <td>@lsdate</td>

                        <!--if the eval is with the employee for comments-->
                        <td @if (status == "Submitted to Employee") { @: colspan="2"
                                                         }>
                            (@status)
                        </td>
                        <td>

                            <!-- if the eval has been sent to HR by the supervisor-->
                            @if (status == "Submitted to HR")
                            {
                                @Html.ActionLink("View", "EditEval", new { id = eid })
                            }
                            <!-- if the eval has been sent to HR by the supervisor AND HR is acting as superuser-->
                            @if (status == "Submitted to HR" && Session["Masquerade"].Equals(true))
                            {
                                @:|
                                @Html.ActionLink("Return to Supervisor [Proxy]", "ReturnEvaltoSupervisor", new { id = eid })
                                @:|
                                @Html.ActionLink("Return to Employee [Proxy]", "ReturnEvaltoEmployee", new { id = eid })
                            }
                            <!-- if the eval has been returned to supervisor by employee-->

                            @if (status == "Contested" || status == "Accepted")
                            {
                                @Html.ActionLink("Edit", "EditEval", new { id = eid })
                                @:|
                                @Html.ActionLink("Return to Employee", "ReturnEvaltoEmployee", new { id = eid })
                                @:|
                                @Html.ActionLink("Submit to HR", "CompleteEval", new { id = eid })
                            }


                            @if (status == "In-Work")
                            {
                                @Html.ActionLink("Edit", "EditEval", new { id = eid })
                                if (ret != null)
                                {
                                    @:|
                                    if (ret.SubmittedNetid != null)
                                    {
                                        @Html.ActionLink("Return to Employee", "ReturnEvaltoEmployee", new { id = eid })
                                        @:(
                                        @ret.SubmittedNetid
                                        @:)
                                }
                                    else
                                    {
                                        @Html.ActionLink("Submit to Employee", "SubmitEval", new { id = eid })
                                    }
                                }
                                else
                                {
                                    @:|
                                    @Html.ActionLink("Submit to Employee", "SubmitEval", new { id = eid })
                                }
                                @:|
                                @Html.ActionLink("Delete", "DeleteEval", new { id = eid })
                            }
                            @if (status == "Deferred")
                            {
                                @Html.ActionLink("Start Evaluation", "EditEval", new { id = eid })
                            }
                            @if (status != null && status != "Deferred" && status != "Submitted to Employee")
                            {
                                @:|
                                @Html.ActionLink("Pdf", "Print2Pdf", "CreatePDF", new { id = eid }, null)
                            }
                        </td>
                    }
                    else
                    {
                        <td><strong>@directReport.name </strong></td>
                        <td></td>
                        <td>@directReport.employee_type_code</td>
                        <td>@lsdate</td>
                        <td></td>
                        <td>
                            @Html.ActionLink("Start Evaluation", "CreateEval", new { id = directReport.netid, type = directReport.employee_type_code })
                            |
                            @Html.ActionLink("Defer Evaluation", "DeferEval", new { id = directReport.netid, type = directReport.employee_type_code })
                        </td>
                    }
                </tr>
            }
            <tr>
                <td></td>
                <td width="20"></td>
                <td width="50"></td>
                <td width="80"></td>
                <td width="80"></td>
                <td></td>
            </tr>
        </table>
    }
    else
    {
        <ul><li>No staff found.</li></ul>
    }

</div>

<div id="editevalno"></div>

@if (StaffEvaluations.Models.SuperUserHelper.IsAdSuperUser(User.Identity.Name.Substring(5)) && Session["Masquerade"].Equals(false))
{
    <br />
    <div>
        <button type="button" data-toggle="modal" data-target="#Masquerade" class="btn">Masquerade as Supervisor</button>
        <button type="button" onclick="location.href = '@Url.Action("EditJDs", "Home")'" class="btn">Edit Job Descriptions</button>
        <button type="button" onclick="location.href = 'http://mssql_dev2.library.illinois.edu/reportportal/report/HR%20Reports/Staff%20Performance%20Evaluation%20Counts'" class="btn">Counts Report</button>
    </div>
}

<div class="modal fade" id="Masquerade" tabindex="-1" role="dialog" aria-labelledby="ChooseSupervisorLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="ChooseSupervisorLabel">Masquerade as a Supervisor</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("MasqueradeAs", "Home"))
                {
                    <span>
                        Search:
                        @Html.DropDownList("netid", (List<SelectListItem>)StaffEvaluations.Models.SuperUserHelper.GetSupervisors())
                        <input type="submit" value="Masquerade" class="btn" />
                    </span>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="evalerror" tabindex="-1" role="dialog" aria-labelledby="evalerrorLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="findLibExpenseLabel" style="color:red;">Error!</h4>
            </div>
            <div class="modal-body">
                @Html.Raw(TempData["error"])
            </div>
            <div class="modal-footer">
                <button type="button" id="gotoeval" class="btn btn-secondary" data-dismiss="modal" onclick="location.href='@Url.Action("EditEval", "Home", new { id = TempData["submittedevalid"]})'">Edit</button>
                <button type="button" id="modalclose" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="doublecheck" tabindex="-1" role="dialog" aria-labelledby="doublecheckLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="findLibExpenseLabel" style="color:orange;">You must review and confirm!</h4>
            </div>
            <div class="modal-body">
                @Html.Raw(TempData["evaltoreview"])
            </div>
            <div class="modal-footer">
                <button type="button" id="confirmaction" class="btn btn-secondary" data-dismiss="modal" onclick="location.href='@Url.Action("AcceptEval", "Home", new { id = TempData["submittedevalid"], button = TempData["evalbutton"]})'">Confirm</button>
                <button type="button" id="gotoeval2" class="btn btn-secondary" data-dismiss="modal" onclick="location.href='@Url.Action("EditEval", "Home", new { id = TempData["submittedevalid"]})'">Edit</button>
                <button type="button" id="modalclose2" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var modal = document.getElementById('evalerror');
        var err = '@TempData["error"]';
        var dc = '@TempData["evaltoreview"]';
        var evalid = "";
        var url = "";
        var go = '@ViewData["go"]';

        $(document).ready(function() {

            openpopup();

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }

            }

            if(go != null && go != '' && isNumeric(go) == false){
                document.getElementById("netid_@ViewData["go"]").scrollIntoView();
            }
        });

        function openpopup() {
            if (err != null && err != '') {
                $('#evalerror').modal('show');
            }
            else if (dc != null && dc != '') {
                $('#doublecheck').modal('show');
    }

        };

        function isNumeric(n) {
            return !isNaN(parseFloat(n)) && isFinite(n);
        };

    </script>
}
