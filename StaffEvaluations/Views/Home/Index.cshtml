@model StaffEvaluations.Models.IndexViewModel

@{
    ViewBag.Title = "Home Page";
}

<h2>Evaluations from your supervisor</h2>

@if (Model.MyEvaluations.Count > 0)
{
    <ul>
        @foreach (StaffEvaluations.Models.StaffPerformanceEvaluation eval in Model.MyEvaluations)
        {
            <li>
                @Html.ActionLink("Go to your evaluation", "EditEval", new { id = eval.EvalId })
            </li>
        }
    </ul>
}
else
{
    <ul><li>Not yet available.</li></ul>
}

<h2>Evaluations for your staff</h2>
<ul>
    @foreach (StaffEvaluations.Models.Person directReport in Model.DirectReports)
    {
        if (Model.MyStaffEvaluations.Any(e => e.NetId == directReport.NetId))
        {
            var eid = Model.MyStaffEvaluations.Where(e => e.NetId == directReport.NetId).Single().EvalId;
            var status = Model.MyStaffEvaluations.Where(e => e.NetId == directReport.NetId).Single().Status;

            <li>
                <strong>@directReport.Name</strong> (@status)

                @if (status != "Complete")
                {
                    @Html.ActionLink("Edit", "EditEval", new { id = eid }) 
                }
                else
                {
                    @Html.ActionLink("View", "EditEval", new { id = eid })
                }

                @if (status == "In-Work")
                {
                    @:| 
                    @Html.ActionLink("Submit", "SubmitEval", new { id = eid })
                    @:|
                    @Html.ActionLink("Delete", "DeleteEval", new { id = eid })
                }
            </li>
        }
        else
        {
            <li>
                <strong>@directReport.Name </strong>
                @Html.ActionLink("Start Evaluation", "CreateEval", new { id = directReport.NetId, type = directReport.EmployeeType })
            </li>
        }
    }
</ul>